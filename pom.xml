<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.4</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.github.gadzooks</groupId>
    <artifactId>weather</artifactId>
    <version>0.0.2-SNAPSHOT</version>
    <name>weather</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>11</java.version>
        <jackson.version>2.12.3</jackson.version>
        <auto-value.version>1.8.1</auto-value.version>
        <google-guava.version>30.1.1-jre</google-guava.version>
        <apache-commons-lang3.version>3.12.0</apache-commons-lang3.version>
        <failsafe-plugin.version>3.0.0-M5</failsafe-plugin.version>
        <jacoco.version>0.8.7</jacoco.version>
        <swagger.version>0.3.0</swagger.version>
        <jpa.version>2.5.0</jpa.version>
    </properties>
    <dependencies>
        <!--        CORE REST API / WEB MVC -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>

        <!--        Spring Data -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <version>${jpa.version}</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!--        LOAD PROPERTY/YAML values into Objects -->
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <!--            Deserialize regions.xml into Region objects. -->
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <!-- Load data from yml, property files into Beans. Ex : load regions.xml into Region class -->
            <artifactId>spring-boot-configuration-processor</artifactId>
            <!--  NOTE : Itâ€™s a best practice to add a dependency as optional in Maven in order to prevent
                  @ConfigurationProperties from being applied to other modules that our project uses.
            -->
            <optional>true</optional>
        </dependency>

        <!--        DOCUMENTATION / SWAGGER -->
        <dependency>
            <groupId>io.toolisticon.springboot</groupId>
            <artifactId>springboot-swagger-starter</artifactId>
            <version>${swagger.version}</version>
        </dependency>

        <!--        FAVORITE JAVA LIBRARIES-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <!-- Included in list of favorite Java libraries-->
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache-commons-lang3.version}</version>
        </dependency>
        <dependency>
            <!-- Included in list of favorite Java libraries-->
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${google-guava.version}</version>
        </dependency>
        <dependency>
            <!-- Included in list of favorite Java libraries-->
            <groupId>com.google.auto.value</groupId>
            <artifactId>auto-value-annotations</artifactId>
            <version>${auto-value.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${failsafe-plugin.version}</version>
            <scope>test</scope>
        </dependency>

        <!--        EMBEDDED MONGO DB for testing-->
        <dependency>
            <groupId>de.flapdoodle.embed</groupId>
            <artifactId>de.flapdoodle.embed.mongo</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>cz.jirutka.spring</groupId>
            <artifactId>embedmongo-spring</artifactId>
            <version>1.3.1</version>
        </dependency>

        <!--        TESTING RELATED -->
        <dependency>
            <!--            Live reload in development-->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.8.0-M1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Testing framework -->
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.5.0</version>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                            <!--   mvn verify will run integration tests-->
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <!--                        Step 1: run tests (mvn verify) -->
                        <!--                        Step 2: see results in (target/site/jacoco/index.html) -->
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.0-M4</version>
                <configuration>
                    <!--  we dont want release plugin to deploy so we only ask to install-->
                    <goals>install</goals>
                    <!-- when we add modules automatically set their version too-->
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--    Allow manven-release-plugin to create releases and tag them in github-->
    <scm>
        <developerConnection>scm:git:git@github.com:gadzooks/weather-java-api.git</developerConnection>
      <tag>weather-0.0.1</tag>
  </scm>


</project>
